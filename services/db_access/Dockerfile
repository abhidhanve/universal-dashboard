# Build stage
FROM golang:1.21-alpine AS builder

# Install git and ca-certificates (needed for dependencies)
RUN apk add --no-cache git ca-certificates

# Set working directory
WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY src src
COPY configs configs
COPY main.go .
COPY app.env .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o app .

# Final stage - use alpine instead of scratch for TLS support
FROM alpine:latest

# Install ca-certificates for HTTPS/TLS requests (crucial for MongoDB Atlas)
RUN apk --no-cache add ca-certificates

# Create non-root user
RUN adduser -D -s /bin/sh appuser

# Set working directory
WORKDIR /app

# Copy the binary from builder stage
COPY --from=builder /app/app .
COPY --from=builder /app/app.env .

# Change to non-root user
USER appuser

# Expose port
EXPOSE 9081

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:9081/ping || exit 1

# Run the application
CMD ["./app"]
